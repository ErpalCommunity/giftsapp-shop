import { Bot as HandlerBot, Context } from 'grammy'
import { UserRepository } from '../../database/repositories/userRepository'

export const setupStartCommand = (bot: HandlerBot): void => {
  bot.command('start', async (ctx: Context) => {
    try {
      const userRepository = new UserRepository()
      
      if (!ctx.from) {
        await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        return
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      const existingUser = await userRepository.findByTelegramIdAsync(ctx.from.id)
      
      if (!existingUser) {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await userRepository.createAsync({
          telegramId: ctx.from.id,
          firstName: ctx.from.first_name,
          lastName: ctx.from.last_name || undefined,
          username: ctx.from.username || undefined,
          languageCode: ctx.from.language_code || undefined
        })
      }
      
      const keyboard = {
        inline_keyboard: [[
          {
            text: '–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω –ø–æ–¥–∞—Ä–∫–æ–≤',
            web_app: { url: process.env.WEBAPP_URL || '' }
          }
        ]]
      }

      await ctx.reply(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –ø–æ–¥–∞—Ä–∫–æ–≤! üéÅ\n\n' +
        '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–¥–∞—Ä–∫–∏ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º Telegram.',
        { reply_markup: keyboard }
      )
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ start:', error)
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
    }
  })
} 