version: '3.9'

services:
  mongodb:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=giftshop
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    restart: unless-stopped

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --user default on >password ${REDIS_PASSWORD} ~* &* +@all
    volumes:
      - redis_data:/data
    networks:
      - coolify
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - coolify.managed=true
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - HOST=0.0.0.0
      - BOT_TOKEN=${BOT_TOKEN}
      - CRYPTO_PAY_API_TOKEN=${CRYPTO_PAY_API_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - PUBLIC_URL=${PUBLIC_URL}
      - MONGODB_URI=${MONGODB_URI}
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    labels:
      - coolify.managed=true
      - traefik.enable=true
      - "traefik.http.routers.server.rule=Host(`api.giftcrybot.ru`)"
      - traefik.http.routers.server.entryPoints=https
      - traefik.http.routers.server.tls=true
    restart: unless-stopped
    networks:
      - coolify
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
      args:
        - VITE_API_URL=${VITE_API_URL}
        - VITE_TELEGRAM_BOT_USERNAME=${VITE_TELEGRAM_BOT_USERNAME}
        - VITE_PUBLIC_URL=${VITE_PUBLIC_URL}
    environment:
      - VITE_PORT=3000
    labels:
      - coolify.managed=true
      - traefik.enable=true
      - "traefik.http.routers.client.rule=Host(`app.giftcrybot.ru`)"
      - traefik.http.routers.client.entryPoints=https
      - traefik.http.routers.client.tls=true
      - "traefik.http.services.client.loadbalancer.server.port=3000"
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
      target: production
    environment:
      - NODE_ENV=production
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBHOOK_DOMAIN=${WEBHOOK_DOMAIN}
      - WEBHOOK_PATH=${WEBHOOK_PATH}
      - WEBAPP_URL=${WEBAPP_URL}
      - SERVER_URL=${SERVER_URL}
    labels:
      - coolify.managed=true
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - coolify

networks:
  coolify:
    external: true

volumes:
  mongodb_data:
  redis_data: