version: '3.9'

services:
  mongodb:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: YhmsnlcjaCuRAOZ9SPtIZYjgtlTHEmqw39GtF052IJjosriwTQWYyQ8S9nekXMgs
    volumes:
      - mongodb_data:/data/db
    networks:
      - dev_network
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dev_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    ports:
      - "4000:4000"
    volumes:
      - ./server:/app
      - server_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=4000
      - MONGODB_URI=mongodb://root:YhmsnlcjaCuRAOZ9SPtIZYjgtlTHEmqw39GtF052IJjosriwTQWYyQ8S9nekXMgs@mongodb:27017
      - JWT_SECRET=dev_secret
      - BOT_TOKEN=${BOT_TOKEN}
      - CRYPTO_PAY_API_TOKEN=${CRYPTO_PAY_API_TOKEN}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - PUBLIC_URL=${PUBLIC_URL}
      - REDIS_URI=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dev_network
    command: npm run dev

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - VITE_PORT=3000
      - VITE_API_URL=http://localhost:4000
      - VITE_TELEGRAM_BOT_USERNAME=${VITE_TELEGRAM_BOT_USERNAME}
      - VITE_PUBLIC_URL=${VITE_PUBLIC_URL}
      - VITE_TELEGRAM_MOCK=true
      - VITE_TELEGRAM_USER_ID=123456789
      - VITE_TELEGRAM_USERNAME=testuser
    depends_on:
      - server
    networks:
      - dev_network
    command: npm run dev

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./bot:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBHOOK_DOMAIN=${WEBHOOK_DOMAIN}
      - WEBHOOK_PATH=${WEBHOOK_PATH}
      - WEBAPP_URL=${WEBAPP_URL}
      - SERVER_URL=${SERVER_URL}
      - ENABLE_WEBHOOK=false
      - ENABLE_POLLING=true
      - LOG_LEVEL=debug
    depends_on:
      - server
    networks:
      - dev_network
    command: npm run dev

networks:
  dev_network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  server_node_modules:
  client_node_modules:
  bot_node_modules:
