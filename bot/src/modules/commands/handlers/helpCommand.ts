import type { HandlerBot } from '../../../types/bot'
import type { Context } from 'grammy'

const SUPPORT_CHAT_ID = process.env.SUPPORT_CHAT_ID

export const setupHelpCommand = (bot: HandlerBot): void => {
  bot.command('help', async (ctx: Context) => {
    try {
      const user = ctx.from
      if (!user) {
        await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        return
      }

      // –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await ctx.reply(
        'üéÅ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!\n\n' +
        '–í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç –∏ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n' +
        '–ü–æ–∫–∞ –≤—ã –∂–¥–µ—Ç–µ –æ—Ç–≤–µ—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ:\n' +
        '‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏\n' +
        '‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞\n' +
        '‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫'
      )

      // –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
      const supportMessage = 
        `üÜò –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n` +
        `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.first_name} ${user.last_name || ''}\n` +
        `üîç Username: @${user.username || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}\n` +
        `üÜî ID: ${user.id}\n` +
        `üåê –Ø–∑—ã–∫: ${user.language_code || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`

      if (SUPPORT_CHAT_ID) {
        await ctx.api.sendMessage(SUPPORT_CHAT_ID, supportMessage, {
          reply_markup: {
            inline_keyboard: [[
              {
                text: 'üìù –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
                url: `tg://user?id=${user.id}`
              }
            ]]
          }
        })
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ help:', error)
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
    }
  })
}